{"ast":null,"code":"var _jsxFileName = \"/Users/dragos/Ruby-developer/GitHubDev/muse-ant-design-dashboard/src/pages/sidebarPages/component.pages/modal.componentPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Modal, Anchor, Alert, Button } from \"antd\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Link\n} = Anchor;\nconst code = `\nimport React, { useState } from 'react';\nimport { Modal, Button } from 'antd';\n\nconst App = () => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={showModal}>\n        Open Modal\n      </Button>\n      <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\n        <p>Some contents...</p>\n        <p>Some contents...</p>\n        <p>Some contents...</p>\n      </Modal>\n    </>\n  );\n};\n\nReactDOM.render(<App />, mountNode);`;\nconst markdown = `\n\n~~~jsx\n${code}\n~~~\n`;\nconst code2 = `\nimport { Modal, Button, Space } from 'antd';\n\nfunction info() {\n  Modal.info({\n    title: 'This is a notification message',\n    content: (\n      <div>\n        <p>some messages...some messages...</p>\n        <p>some messages...some messages...</p>\n      </div>\n    ),\n    onOk() {},\n  });\n}\n\nfunction success() {\n  Modal.success({\n    content: 'some messages...some messages...',\n  });\n}\n\nfunction error() {\n  Modal.error({\n    title: 'This is an error message',\n    content: 'some messages...some messages...',\n  });\n}\n\nfunction warning() {\n  Modal.warning({\n    title: 'This is a warning message',\n    content: 'some messages...some messages...',\n  });\n}\n\nReactDOM.render(\n  <Space>\n    <Button onClick={info}>Info</Button>\n    <Button onClick={success}>Success</Button>\n    <Button onClick={error}>Error</Button>\n    <Button onClick={warning}>Warning</Button>\n  </Space>,\n  mountNode,\n);`;\nconst markdown2 = `\n\n~~~jsx\n${code2}\n~~~\n`;\nexport const ModalComponentPage = () => {\n  _s();\n\n  const [notification, setNotification] = useState(false);\n  const [alert, setAlert] = useState(false);\n  const [alert2, setAlert2] = useState(false);\n\n  function info() {\n    Modal.info({\n      title: \"This is a notification message\",\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"some messages...some messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"some messages...some messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this),\n\n      onOk() {}\n\n    });\n  }\n\n  function success() {\n    Modal.success({\n      content: \"some messages...some messages...\"\n    });\n  }\n\n  function error() {\n    Modal.error({\n      title: \"This is an error message\",\n      content: \"some messages...some messages...\"\n    });\n  }\n\n  function warning() {\n    Modal.warning({\n      title: \"This is a warning message\",\n      content: \"some messages...some messages...\"\n    });\n  }\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"section\", {\n              className: \"mb-24\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Modal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-dark\",\n                children: \"Modal dialogs.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              role: \"separator\",\n              className: \"ant-divider ant-divider-horizontal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              id: \"When-To-Use\",\n              className: \"mb-24\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"When To Use\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"When requiring users to interact with the application, but without jumping to a new page and interrupting the user\\u2019s workflow, you can use \", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"Modal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 41\n                }, this), \" to create a new floating layer over the current page to get user feedback or display information. Additionally, if you need show a simple confirmation dialog, you can use\", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"antd.Modal.confirm()\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this), \", and so on.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Examples\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              id: \"Basic\",\n              className: \"mb-24\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                role: \"separator\",\n                className: \" ant-divider ant-divider-horizontal ant-divider-with-text-left \",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ant-divider-inner-text\",\n                  children: \"Basic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Basic modal.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"showcase\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"ant-btn ant-btn-primary\",\n                  onClick: showModal,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Open Modal\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                  title: \"Basic Modal\",\n                  visible: isModalVisible,\n                  onOk: handleOk,\n                  onCancel: handleCancel,\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Some contents...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Some contents...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Some contents...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n                className: \"highlight-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn-copy ant-btn ant-btn-primary ant-btn-sm\",\n                  onClick: e => {\n                    navigator.clipboard.writeText(code);\n                    setAlert(!alert);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    \"aria-label\": \"icon: copy\",\n                    className: \"anticon anticon-copy\",\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      viewBox: \"64 64 896 896\",\n                      \"data-icon\": \"copy\",\n                      width: \"1em\",\n                      height: \"1em\",\n                      fill: \"currentColor\",\n                      \"aria-hidden\": \"true\",\n                      focusable: \"false\",\n                      className: \"\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Copy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 19\n                }, this), alert ? /*#__PURE__*/_jsxDEV(Alert, {\n                  message: \"Copied!\",\n                  type: \"success\",\n                  showIcon: true,\n                  action: /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    type: \"text\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 31\n                  }, this),\n                  closable: true,\n                  className: \"alert-copy-code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 21\n                }, this) : \"\", /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                  children: markdown,\n                  components: {\n                    code({\n                      node,\n                      inline,\n                      className,\n                      children,\n                      ...props\n                    }) {\n                      const match = /language-(\\w+)/.exec(className || \"\");\n                      return !inline && match ? /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n                        children: String(children).replace(/\\n$/, \"\"),\n                        language: match[1],\n                        PreTag: \"div\",\n                        ...props,\n                        className: \"codetext\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 251,\n                        columnNumber: 27\n                      }, this) : /*#__PURE__*/_jsxDEV(\"code\", {\n                        className: className,\n                        ...props,\n                        children: children\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 27\n                      }, this);\n                    }\n\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              id: \"Information-modal-dialog\",\n              className: \"mb-24\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                role: \"separator\",\n                className: \" ant-divider ant-divider-horizontal ant-divider-with-text-left \",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ant-divider-inner-text\",\n                  children: \"Information modal dialog\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"In the various types of information modal dialog, only one button to close dialog is provided.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"showcase\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"ant-btn\",\n                  onClick: info,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Info\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"ant-btn\",\n                  onClick: success,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Success\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"ant-btn\",\n                  onClick: error,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Error\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"ant-btn\",\n                  onClick: warning,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Warning\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n                className: \"highlight-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn-copy ant-btn ant-btn-primary ant-btn-sm\",\n                  onClick: e => {\n                    navigator.clipboard.writeText(code2);\n                    setAlert2(!alert2);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    \"aria-label\": \"icon: copy\",\n                    className: \"anticon anticon-copy\",\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      viewBox: \"64 64 896 896\",\n                      \"data-icon\": \"copy\",\n                      width: \"1em\",\n                      height: \"1em\",\n                      fill: \"currentColor\",\n                      \"aria-hidden\": \"true\",\n                      focusable: \"false\",\n                      className: \"\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 317,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Copy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 19\n                }, this), alert2 ? /*#__PURE__*/_jsxDEV(Alert, {\n                  message: \"Copied!\",\n                  type: \"success\",\n                  showIcon: true,\n                  action: /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    type: \"text\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 31\n                  }, this),\n                  closable: true,\n                  className: \"alert-copy-code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 21\n                }, this) : \"\", /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                  children: markdown2,\n                  components: {\n                    code({\n                      node,\n                      inline,\n                      className,\n                      children,\n                      ...props\n                    }) {\n                      const match = /language-(\\w+)/.exec(className || \"\");\n                      return !inline && match ? /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n                        children: String(children).replace(/\\n$/, \"\"),\n                        language: match[1],\n                        PreTag: \"div\",\n                        ...props,\n                        className: \"codetext\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 340,\n                        columnNumber: 27\n                      }, this) : /*#__PURE__*/_jsxDEV(\"code\", {\n                        className: className,\n                        ...props,\n                        children: children\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 348,\n                        columnNumber: 27\n                      }, this);\n                    }\n\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-right font-semibold mb-24\",\n              children: [\"Looking for more Ant Design React Modal? Please check the\", /*#__PURE__*/_jsxDEV(\"a\", {\n                target: \"_blank\",\n                href: \"https://antdv.com/components/modal/\",\n                rel: \"noreferrer\",\n                children: \"official docs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 17\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-anchor\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"300px\",\n                height: \"90px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ant-affix\",\n                style: {\n                  position: \"fixed\",\n                  top: \"85px\",\n                  width: \"300px\",\n                  height: \"90px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ant-anchor-wrapper\",\n                  style: {\n                    maxHeight: \"calc(100vh - 85px)\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ant-anchor\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ant-anchor-ink\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 454,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Anchor, {\n                      affix: true,\n                      offsetTop: 85,\n                      children: [/*#__PURE__*/_jsxDEV(Link, {\n                        href: \"#When-To-Use\",\n                        title: \"When To Use\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 456,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Link, {\n                        href: \"#Basic\",\n                        title: \"Basic\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 458,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Link, {\n                        href: \"#Information-modal-dialog\",\n                        title: \"Information modal dialog\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 459,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 455,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalComponentPage, \"8JZhXWai7c4EcN7h0FpVDOGQW7A=\");\n\n_c = ModalComponentPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalComponentPage\");","map":{"version":3,"sources":["/Users/dragos/Ruby-developer/GitHubDev/muse-ant-design-dashboard/src/pages/sidebarPages/component.pages/modal.componentPage.jsx"],"names":["React","useState","Modal","Anchor","Alert","Button","ReactMarkdown","Prism","SyntaxHighlighter","Link","code","markdown","code2","markdown2","ModalComponentPage","notification","setNotification","alert","setAlert","alert2","setAlert2","info","title","content","onOk","success","error","warning","isModalVisible","setIsModalVisible","showModal","handleOk","handleCancel","e","navigator","clipboard","writeText","node","inline","className","children","props","match","exec","String","replace","width","height","position","top","maxHeight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,MAA7C;AAEA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,KAAK,IAAIC,iBAAlB,QAA2C,0BAA3C;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAWN,MAAjB;AAEA,MAAMO,IAAI,GAAI;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAjCA;AAkCA,MAAMC,QAAQ,GAAI;AAClB;AACA;AACA,EAAED,IAAK;AACP;AACA,CALA;AAOA,MAAME,KAAK,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GA5CA;AA6CA,MAAMC,SAAS,GAAI;AACnB;AACA;AACA,EAAED,KAAM;AACR;AACA,CALA;AAOA,OAAO,MAAME,kBAAkB,GAAG,MAAM;AAAA;;AACtC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,KAAD,CAApC;;AAEA,WAASoB,IAAT,GAAgB;AACdnB,IAAAA,KAAK,CAACmB,IAAN,CAAW;AACTC,MAAAA,KAAK,EAAE,gCADE;AAETC,MAAAA,OAAO,eACL;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;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","sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, Anchor, Alert, Button } from \"antd\";\n\nimport ReactMarkdown from \"react-markdown\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nconst { Link } = Anchor;\n\nconst code = `\nimport React, { useState } from 'react';\nimport { Modal, Button } from 'antd';\n\nconst App = () => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={showModal}>\n        Open Modal\n      </Button>\n      <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\n        <p>Some contents...</p>\n        <p>Some contents...</p>\n        <p>Some contents...</p>\n      </Modal>\n    </>\n  );\n};\n\nReactDOM.render(<App />, mountNode);`;\nconst markdown = `\n\n~~~jsx\n${code}\n~~~\n`;\n\nconst code2 = `\nimport { Modal, Button, Space } from 'antd';\n\nfunction info() {\n  Modal.info({\n    title: 'This is a notification message',\n    content: (\n      <div>\n        <p>some messages...some messages...</p>\n        <p>some messages...some messages...</p>\n      </div>\n    ),\n    onOk() {},\n  });\n}\n\nfunction success() {\n  Modal.success({\n    content: 'some messages...some messages...',\n  });\n}\n\nfunction error() {\n  Modal.error({\n    title: 'This is an error message',\n    content: 'some messages...some messages...',\n  });\n}\n\nfunction warning() {\n  Modal.warning({\n    title: 'This is a warning message',\n    content: 'some messages...some messages...',\n  });\n}\n\nReactDOM.render(\n  <Space>\n    <Button onClick={info}>Info</Button>\n    <Button onClick={success}>Success</Button>\n    <Button onClick={error}>Error</Button>\n    <Button onClick={warning}>Warning</Button>\n  </Space>,\n  mountNode,\n);`;\nconst markdown2 = `\n\n~~~jsx\n${code2}\n~~~\n`;\n\nexport const ModalComponentPage = () => {\n  const [notification, setNotification] = useState(false);\n\n  const [alert, setAlert] = useState(false);\n  const [alert2, setAlert2] = useState(false);\n\n  function info() {\n    Modal.info({\n      title: \"This is a notification message\",\n      content: (\n        <div>\n          <p>some messages...some messages...</p>\n          <p>some messages...some messages...</p>\n        </div>\n      ),\n      onOk() {},\n    });\n  }\n  function success() {\n    Modal.success({\n      content: \"some messages...some messages...\",\n    });\n  }\n\n  function error() {\n    Modal.error({\n      title: \"This is an error message\",\n      content: \"some messages...some messages...\",\n    });\n  }\n\n  function warning() {\n    Modal.warning({\n      title: \"This is a warning message\",\n      content: \"some messages...some messages...\",\n    });\n  }\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n  return (\n    <div>\n      <div className=\"main-content\">\n        <div>\n          <div className=\"page-row\">\n            <div className=\"page-content\">\n              <section className=\"mb-24\">\n                <h1>Modal</h1>\n                <p className=\"text-dark\">Modal dialogs.</p>\n              </section>\n              <div\n                role=\"separator\"\n                className=\"ant-divider ant-divider-horizontal\"\n              ></div>\n              <section id=\"When-To-Use\" className=\"mb-24\">\n                <h2>When To Use</h2>\n                <p>\n                  When requiring users to interact with the application, but\n                  without jumping to a new page and interrupting the user’s\n                  workflow, you can use <code>Modal</code> to create a new\n                  floating layer over the current page to get user feedback or\n                  display information. Additionally, if you need show a simple\n                  confirmation dialog, you can use\n                  <code>antd.Modal.confirm()</code>, and so on.\n                </p>\n              </section>\n              <h2>Examples</h2>\n              <section id=\"Basic\" className=\"mb-24\">\n                <div\n                  role=\"separator\"\n                  className=\"\n              ant-divider ant-divider-horizontal ant-divider-with-text-left\n            \"\n                >\n                  <span className=\"ant-divider-inner-text\">Basic</span>\n                </div>\n                <p>Basic modal.</p>\n                <div className=\"showcase\">\n                  <button\n                    type=\"button\"\n                    className=\"ant-btn ant-btn-primary\"\n                    onClick={showModal}\n                  >\n                    <span>Open Modal</span>\n                  </button>\n                  <Modal\n                    title=\"Basic Modal\"\n                    visible={isModalVisible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                  >\n                    <p>Some contents...</p>\n                    <p>Some contents...</p>\n                    <p>Some contents...</p>\n                  </Modal>\n                </div>\n                <section className=\"highlight-section\">\n                  <button\n                    type=\"button\"\n                    className=\"btn-copy ant-btn ant-btn-primary ant-btn-sm\"\n                    onClick={(e) => {\n                      navigator.clipboard.writeText(code);\n                      setAlert(!alert);\n                    }}\n                  >\n                    <i aria-label=\"icon: copy\" className=\"anticon anticon-copy\">\n                      <svg\n                        viewBox=\"64 64 896 896\"\n                        data-icon=\"copy\"\n                        width=\"1em\"\n                        height=\"1em\"\n                        fill=\"currentColor\"\n                        aria-hidden=\"true\"\n                        focusable=\"false\"\n                        className=\"\"\n                      >\n                        <path d=\"M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z\"></path>\n                      </svg>\n                    </i>\n                    <span>Copy</span>\n                  </button>\n                  {alert ? (\n                    <Alert\n                      message=\"Copied!\"\n                      type=\"success\"\n                      showIcon\n                      action={<Button size=\"small\" type=\"text\"></Button>}\n                      closable\n                      className=\"alert-copy-code\"\n                    />\n                  ) : (\n                    \"\"\n                  )}\n\n                  <ReactMarkdown\n                    children={markdown}\n                    components={{\n                      code({ node, inline, className, children, ...props }) {\n                        const match = /language-(\\w+)/.exec(className || \"\");\n                        return !inline && match ? (\n                          <SyntaxHighlighter\n                            children={String(children).replace(/\\n$/, \"\")}\n                            language={match[1]}\n                            PreTag=\"div\"\n                            {...props}\n                            className=\"codetext\"\n                          />\n                        ) : (\n                          <code className={className} {...props}>\n                            {children}\n                          </code>\n                        );\n                      },\n                    }}\n                  />\n                </section>\n              </section>\n              <section id=\"Information-modal-dialog\" className=\"mb-24\">\n                <div\n                  role=\"separator\"\n                  className=\"\n              ant-divider ant-divider-horizontal ant-divider-with-text-left\n            \"\n                >\n                  <span className=\"ant-divider-inner-text\">\n                    Information modal dialog\n                  </span>\n                </div>\n                <p>\n                  In the various types of information modal dialog, only one\n                  button to close dialog is provided.\n                </p>\n                <div className=\"showcase\">\n                  <button type=\"button\" className=\"ant-btn\" onClick={info}>\n                    <span>Info</span>\n                  </button>\n                  <button type=\"button\" className=\"ant-btn\" onClick={success}>\n                    <span>Success</span>\n                  </button>\n                  <button type=\"button\" className=\"ant-btn\" onClick={error}>\n                    <span>Error</span>\n                  </button>\n                  <button type=\"button\" className=\"ant-btn\" onClick={warning}>\n                    <span>Warning</span>\n                  </button>\n                </div>\n                <section className=\"highlight-section\">\n                  <button\n                    type=\"button\"\n                    className=\"btn-copy ant-btn ant-btn-primary ant-btn-sm\"\n                    onClick={(e) => {\n                      navigator.clipboard.writeText(code2);\n                      setAlert2(!alert2);\n                    }}\n                  >\n                    <i aria-label=\"icon: copy\" className=\"anticon anticon-copy\">\n                      <svg\n                        viewBox=\"64 64 896 896\"\n                        data-icon=\"copy\"\n                        width=\"1em\"\n                        height=\"1em\"\n                        fill=\"currentColor\"\n                        aria-hidden=\"true\"\n                        focusable=\"false\"\n                        className=\"\"\n                      >\n                        <path d=\"M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z\"></path>\n                      </svg>\n                    </i>\n                    <span>Copy</span>\n                  </button>\n                  {alert2 ? (\n                    <Alert\n                      message=\"Copied!\"\n                      type=\"success\"\n                      showIcon\n                      action={<Button size=\"small\" type=\"text\"></Button>}\n                      closable\n                      className=\"alert-copy-code\"\n                    />\n                  ) : (\n                    \"\"\n                  )}\n                  <ReactMarkdown\n                    children={markdown2}\n                    components={{\n                      code({ node, inline, className, children, ...props }) {\n                        const match = /language-(\\w+)/.exec(className || \"\");\n                        return !inline && match ? (\n                          <SyntaxHighlighter\n                            children={String(children).replace(/\\n$/, \"\")}\n                            language={match[1]}\n                            PreTag=\"div\"\n                            {...props}\n                            className=\"codetext\"\n                          />\n                        ) : (\n                          <code className={className} {...props}>\n                            {children}\n                          </code>\n                        );\n                      },\n                    }}\n                  />\n                  {/*<pre style={{ maxHeight: \"500px\" }}>\n                    <code className=\"hljs html\">\n                      <span className=\"hljs-tag\">\n                        &lt;<span className=\"hljs-name\">template</span>&gt;\n                      </span>\n                      <span className=\"hljs-tag\">\n                        &lt;<span className=\"hljs-name\">div</span>&gt;\n                      </span>\n                      <span className=\"hljs-tag\">\n                        &lt;<span className=\"hljs-name\">a-button</span> @\n                        <span className=\"hljs-attr\">click</span>=\n                        <span className=\"hljs-string\">\"info\"</span>&gt;\n                      </span>\n                      Info\n                      <span className=\"hljs-tag\">\n                        &lt;/<span className=\"hljs-name\">a-button</span>&gt;\n                      </span>\n                      <span className=\"hljs-tag\">\n                        &lt;<span className=\"hljs-name\">a-button</span> @\n                        <span className=\"hljs-attr\">click</span>=\n                        <span className=\"hljs-string\">\"success\"</span>&gt;\n                      </span>\n                      Success\n                      <span className=\"hljs-tag\">\n                        &lt;/<span className=\"hljs-name\">a-button</span>&gt;\n                      </span>\n                      <span className=\"hljs-tag\">\n                        &lt;<span className=\"hljs-name\">a-button</span> @\n                        <span className=\"hljs-attr\">click</span>=\n                        <span className=\"hljs-string\">\"error\"</span>&gt;\n                      </span>\n                      Error\n                      <span className=\"hljs-tag\">\n                        &lt;/<span className=\"hljs-name\">a-button</span>&gt;\n                      </span>\n                      <span className=\"hljs-tag\">\n                        &lt;<span className=\"hljs-name\">a-button</span> @\n                        <span className=\"hljs-attr\">click</span>=\n                        <span className=\"hljs-string\">\"warning\"</span>&gt;\n                      </span>\n                      Warning\n                      <span className=\"hljs-tag\">\n                        &lt;/<span className=\"hljs-name\">a-button</span>&gt;\n                      </span>\n                      <span className=\"hljs-tag\">\n                        &lt;/<span className=\"hljs-name\">div</span>&gt;\n                      </span>\n                      <span className=\"hljs-tag\">\n                        &lt;/<span className=\"hljs-name\">template</span>&gt;\n                      </span>\n                      <span className=\"hljs-tag\">\n                        &lt;<span className=\"hljs-name\">script</span>&gt;\n                      </span>\n                      <span className=\"javascript\">\n                        <span className=\"hljs-keyword\">import</span> some\n                        function calles : Modal{\" \"}\n                        <span className=\"hljs-keyword\">from</span>{\" \"}\n                        <span className=\"hljs-string\">'ant-design-React'</span>;\n                        <span className=\"hljs-keyword\">export</span>{\" \"}\n                        <span className=\"hljs-keyword\">default</span>\n       \n\n  \n                      </span>\n                      <span className=\"hljs-tag\">\n                        &lt;/<span className=\"hljs-name\">script</span>&gt;\n                      </span>\n                    </code>\n                  </pre>*/}\n                </section>\n              </section>\n              <p className=\"text-right font-semibold mb-24\">\n                Looking for more Ant Design React Modal? Please check the\n                <a\n                  target=\"_blank\"\n                  href=\"https://antdv.com/components/modal/\"\n                  rel=\"noreferrer\"\n                >\n                  official docs\n                </a>\n                .\n              </p>\n            </div>\n            <div className=\"page-anchor\">\n              <div style={{ width: \"300px\", height: \"90px\" }}>\n                <div\n                  className=\"ant-affix\"\n                  style={{\n                    position: \"fixed\",\n                    top: \"85px\",\n                    width: \"300px\",\n                    height: \"90px\",\n                  }}\n                >\n                  <div\n                    className=\"ant-anchor-wrapper\"\n                    style={{ maxHeight: \"calc(100vh - 85px)\" }}\n                  >\n                    <div className=\"ant-anchor\">\n                      <div className=\"ant-anchor-ink\"></div>\n                      <Anchor affix={true} offsetTop={85}>\n                        <Link href=\"#When-To-Use\" title=\"When To Use\" />\n\n                        <Link href=\"#Basic\" title=\"Basic\" />\n                        <Link\n                          href=\"#Information-modal-dialog\"\n                          title=\"Information modal dialog\"\n                        />\n                      </Anchor>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}